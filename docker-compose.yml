services:
  # Redis service configuration
  redis-server:
    # Build the Redis image from the Dockerfile in the ./redis directory
    build:
      context: .
      dockerfile: redis/Dockerfile
    container_name: redis-tls-server
    # Expose port 6379 to the host machine for the TLS connection
    ports:
      - "6379:6379"
    volumes:
      # Mount the certificates from the local ./certs directory into the container
      - ./certs:/etc/redis/certs
    networks:
      - redis-net

  # ASP.NET Core Web API service configuration
  aspnet-api:
    build:
      context: .
      dockerfile: src/Dockerfile
    container_name: aspnet-redis-client
    # The port mapping for the web api (e.g., 8080 on host to 80 on container)
    ports:
      - "8080:8080"
      - "8081:8081"
    # Make the API dependent on the redis-server, so Redis starts first
    depends_on:
      - redis-server
    environment:
      # Pass Redis connection details to the API as environment variables
      - ASPNETCORE_URLS=http://+:8080;https://+:8081
      - REDIS_HOST=172.16.0.4
      - REDIS_PASSWORD=some_complex_password
      - Kestrel__Certificates__Default__Path=/app/certs/aspnetapp.pfx
      - Kestrel__Certificates__Default__Password=password
    volumes:
        # Mount the certificates into the ASP.NET application container
      - ./certs:/app/certs
    networks:
      - redis-net

networks:
  # Define the bridge network for services to communicate
  redis-net:
    driver: bridge
